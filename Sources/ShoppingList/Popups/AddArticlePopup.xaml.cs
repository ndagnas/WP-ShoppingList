//*******************************************************************************************************************************
// DEBUT DU FICHIER
//*******************************************************************************************************************************

//*******************************************************************************************************************************
// Nom           : AddArticlePopup.xaml.cs
// Auteur        : Nicolas Dagnas
// Description   : Implémentation de la Popup AddArticlePopup
// Créé le       : 26/10/2013
// Modifié le    : 09/06/2014
//*******************************************************************************************************************************

//-------------------------------------------------------------------------------------------------------------------------------
#region Using directives
//-------------------------------------------------------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Windows;
using System.Data.Linq;
using System.ComponentModel;
using System.Windows.Controls;
using System.Collections.Generic;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using ShoppingList.Data;
using ShoppingList.Controls;
using ShoppingList.Resources;
using ShoppingList.Popups.Primitives;
//-------------------------------------------------------------------------------------------------------------------------------
#endregion
//-------------------------------------------------------------------------------------------------------------------------------

//*******************************************************************************************************************************
// Début du bloc "ShoppingList.Popups"
//*******************************************************************************************************************************
namespace ShoppingList.Popups
	{

	//   ###   ####   #####  #   ###   #      #####         #####  #   #  #####  ####   #   #
	//  #   #  #   #    #    #  #   #  #      #             #      ##  #    #    #   #   # # 
	//  #####  ####     #    #  #      #      ###    #####  ###    # # #    #    ####     #  
	//  #   #  #   #    #    #  #   #  #      #             #      #  ##    #    #   #    #  
	//  #   #  #   #    #    #   ###   #####  #####         #####  #   #    #    #   #    #  

	//***************************************************************************************************************************
	// Classe ArticleEntry
	//***************************************************************************************************************************
	#region // Déclaration et Implémentation de l'Objet
	//---------------------------------------------------------------------------------------------------------------------------
	/// <summary>
	/// Définit un nouvel article.
	/// </summary>
	//---------------------------------------------------------------------------------------------------------------------------
	public class ArticleEntry : EventArgs
		{
		//***********************************************************************************************************************
		/// <summary>
		/// Initialise une nouvelle instance de l'objet <b>ArticleEntry</b>.
		/// </summary>
		/// <param name="Article">Article concerné.</param>
		/// <param name="Quantity">Quantité d'articles.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		public ArticleEntry ( Article Article, int Quantity )
			{
			//-------------------------------------------------------------------------------------------------------------------
			this.Article  = Article;
			this.Quantity = Quantity;
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Convertit la valeur de l'objet en <b>String</b> équivalent.
		/// </summary>
		/// <returns>Chaine contenant la valeur convertie de l'objet.</returns>
		//-----------------------------------------------------------------------------------------------------------------------
		public override string ToString () { return this.Article.Description; }
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Obtiens l'identifiant de l'article.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public Article Article { get; private set; }
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Obtiens la quantité de l'article.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public int Quantity { get; private set; }
		//***********************************************************************************************************************
		}
	//---------------------------------------------------------------------------------------------------------------------------
	#endregion
	//***************************************************************************************************************************

	//   ###   ####   ####           ###   ####   #####  #   ###   #      #####
	//  #   #  #   #  #   #         #   #  #   #    #    #  #   #  #      #    
	//  #####  #   #  #   #  #####  #####  ####     #    #  #      #      ###  
	//  #   #  #   #  #   #         #   #  #   #    #    #  #   #  #      #    
	//  #   #  ####   ####          #   #  #   #    #    #   ###   #####  #####

	//***************************************************************************************************************************
	// Classe AddArticlePopup
	//***************************************************************************************************************************
	#region // Déclaration et Implémentation de l'Objet
	//---------------------------------------------------------------------------------------------------------------------------
	/// <summary>
	/// Fournit une fenêtre de partage.
	/// </summary>
	//---------------------------------------------------------------------------------------------------------------------------
	public partial class AddArticlePopup : PopupBase
		{
		//-----------------------------------------------------------------------------------------------------------------------
		// Section des Attributs
		//-----------------------------------------------------------------------------------------------------------------------
		private ArticleEntry               Result   = null;
		private EventHandler<ArticleEntry> Complete = null;
		//-----------------------------------------------------------------------------------------------------------------------

		//***********************************************************************************************************************
		#region // Section des Constructeurs
		//-----------------------------------------------------------------------------------------------------------------------

		//***********************************************************************************************************************
		/// <summary>
		/// Initialise une nouvelle instance de l'objet <b>AddArticlePopup</b>.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public AddArticlePopup () : base ( false, true ) { this.InitializeComponent (); }
		//***********************************************************************************************************************

		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		#region // Section des Procédures Dérivées
		//-----------------------------------------------------------------------------------------------------------------------
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'une pression sur le bouton Précédent.
		/// </summary>
		/// <param name="Args"><b>EventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		public override void OnCancel ( EventArgs Args )
			{ base.OnCancel ( Args ); this.Complete = null; }
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Déclenche un événement <b>Closed</b>.
		/// </summary>
		/// <param name="Args"><b>EventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		public override void OnClosed ( EventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			base.OnClosed ( Args );

			if ( this.Complete != null ) this.Complete ( this, this.Result );
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
	
		//***********************************************************************************************************************
		/// <summary>
		/// Déclenche un événement <b>Opened</b>.
		/// </summary>
		/// <param name="Args"><b>EventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		public override void OnOpened ( EventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			if ( string.IsNullOrWhiteSpace ( this.ArticleControl.Text ) )
				this.Dispatcher.BeginInvoke ( new Action ( () => { ArticleControl.Focus (); } ) );
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // Section des Procédures Publiques & Protégées
		//-----------------------------------------------------------------------------------------------------------------------
		
		//***********************************************************************************************************************
		/// <summary>
		/// Ouvre la popup pour l'ajout d'un article favori.
		/// </summary>
		/// <param name="Complete">Délégué à appeler à la validation du filtrage.</param>
		/// <param name="Article">Article à ajouter</param>
		//-----------------------------------------------------------------------------------------------------------------------
		public void OpenToAddFavoryArticle ( EventHandler<ArticleEntry> Complete )
			{
			//-------------------------------------------------------------------------------------------------------------------
			if ( ! base.IsOpen )
				{
				//---------------------------------------------------------------------------------------------------------------
				this.Result   = null;
				this.Complete = Complete;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				this.TitleControl   .Text       = AppResources.AddArticlePopup_Title_ToFavorite;
				this.SubTitleControl.Text       = AppResources.AddArticlePopup_SubTitle_ToFavorite;
				this.ArticleControl .Text       = "";
				this.ArticleControl .IsEnabled  = true;
				this.QuantityBlock  .Visibility = Visibility.Collapsed;
				this.QuantityControl.Text       = "1";
				this.AddButton      .IsEnabled  = false;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				var Articles = new List<string> ();
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				foreach ( Article article in from A in Instance.ArticleSource.Article.Take (50) 
										     orderby A.Entries descending, A.Description select A )
					{
					//-----------------------------------------------------------------------------------------------------------
					Articles.Add ( article.Description );
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				this.ArticleControl.ItemsSource = Articles.ToArray ();
				//---------------------------------------------------------------------------------------------------------------
			
				//---------------------------------------------------------------------------------------------------------------
				base.Open ();
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Ouvre la popup pour l'ajout d'un article à acheter.
		/// </summary>
		/// <param name="OperationComplete">Délégué à appeler à la validation du filtrage.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		public void OpenToAddShoppingArticle ( EventHandler<ArticleEntry> Complete )
			{
			//-------------------------------------------------------------------------------------------------------------------
			this.OpenToAddShoppingArticle ( Complete, null );
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Ouvre la popup pour l'ajout d'un article à acheter.
		/// </summary>
		/// <param name="OperationComplete">Délégué à appeler à la validation du filtrage.</param>
		/// <param name="Article">Article à ajouter</param>
		//-----------------------------------------------------------------------------------------------------------------------
		public void OpenToAddShoppingArticle ( EventHandler<ArticleEntry> Complete, Article Article )
			{
			//-------------------------------------------------------------------------------------------------------------------
			if ( ! base.IsOpen )
				{
				//---------------------------------------------------------------------------------------------------------------
				this.Result   = null;
				this.Complete = Complete;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				this.TitleControl   .Text       = AppResources.AddArticlePopup_Title_ToBuy;
				this.SubTitleControl.Text       = AppResources.AddArticlePopup_SubTitle_ToBuy;
				this.ArticleControl .Text       = ( Article == null ) ? "" : Article.Description;
				this.ArticleControl .IsEnabled  = ( Article == null );
				this.QuantityBlock  .Visibility = Visibility.Visible;
				this.QuantityControl.Text       = "1";
				this.AddButton      .IsEnabled  = ( Article != null );
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				if ( Article == null )
					{
					//-----------------------------------------------------------------------------------------------------------
					var Articles = new List<string> ();
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					foreach ( Article article in from A in Instance.ArticleSource.Article.Take (50) 
										     orderby A.Entries descending, A.Description select A )
						{
						//-------------------------------------------------------------------------------------------------------
						Articles.Add ( article.Description );
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					this.ArticleControl.ItemsSource = Articles.ToArray ();
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
			
				//---------------------------------------------------------------------------------------------------------------
				base.Open ();
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // Section des Procédures liées aux Contrôles
		//-----------------------------------------------------------------------------------------------------------------------

		//***********************************************************************************************************************
		/// <summary>
		/// Se produit quand le texte du champ change.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnArticleChanged ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			this.AddButton.IsEnabled = ! string.IsNullOrWhiteSpace ( this.ArticleControl.Text );
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un click sur le bouton <b>-</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnDecreaseClick ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			int Quantity = this.QuantityControl.Text.ToInteger () - 1;

			this.QuantityControl.Text = Quantity.ToString ();

			this.DecreaseButton.IsEnabled = ( Quantity > 0 );
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un click sur le bouton <b>+</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnIncreaseClick ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			int Quantity = this.QuantityControl.Text.ToInteger () + 1;

			this.QuantityControl.Text = Quantity.ToString ();

			this.DecreaseButton.IsEnabled = ( Quantity > 0 );
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un click sur le bouton <b>ajouter</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnAddClick ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			string Description = this.ArticleControl .Text;
			int    Quantity    = this.QuantityControl.Text.ToInteger ();
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			Article Item = Instance.ArticleSource.Article.SingleOrDefault 
			                                                ( A => A.Description == Description );

			if ( Item != null && this.QuantityBlock.Visibility == Visibility.Collapsed )
				{
				if ( Item.IsFavory )
					{
					MessageBox.Show ( AppResources.AddArticlePopup_AddToFavorite_Error );
						
					return;
					}
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			if ( Item == null )
				{
				//---------------------------------------------------------------------------------------------------------------
				Item = new Article () { Description = Description };

				if ( this.QuantityBlock.Visibility == Visibility.Collapsed )
					Item.IsFavory = true;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				Instance.ArticleSource.Article.InsertOnSubmit ( Item );
				Instance.ArticleSource.SubmitChanges          (      );
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			else if ( this.QuantityBlock.Visibility == Visibility.Collapsed )
				{
				//---------------------------------------------------------------------------------------------------------------
				Item.IsFavory = true;

				Instance.ArticleSource.SubmitChanges ();
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.Result = new ArticleEntry ( Item, Quantity );

			this.Close ();
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un click sur le bouton <b>annuler</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnCancelClick ( object Sender, RoutedEventArgs Args )
			{ this.Complete = null; this.Close (); }
		//***********************************************************************************************************************

		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		}
	//---------------------------------------------------------------------------------------------------------------------------
	#endregion
	//***************************************************************************************************************************

	} // Fin du namespace "ShoppingList.Popups"
//*******************************************************************************************************************************

//*******************************************************************************************************************************
// FIN DU FICHIER
//*******************************************************************************************************************************
