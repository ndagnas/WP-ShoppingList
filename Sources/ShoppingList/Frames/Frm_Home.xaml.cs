//*******************************************************************************************************************************
// DEBUT DU FICHIER
//*******************************************************************************************************************************

//*******************************************************************************************************************************
// Nom           : Frm_Welcome.xaml.cs
// Auteur        : Nicolas Dagnas
// Description   : Implémentation du formulaire Frm_Welcome
// Créé le       : 26/10/2013
// Modifié le    : 09/06/2014
//*******************************************************************************************************************************

//-------------------------------------------------------------------------------------------------------------------------------
#region Using directives
//-------------------------------------------------------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Windows;
using System.ComponentModel;
using System.Windows.Controls;
using System.Windows.Threading;
using System.IO.IsolatedStorage;
using System.Collections.Generic;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using Microsoft.Phone.Shell;
using Microsoft.Phone.Tasks;
using Microsoft.Phone.Controls;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using ExifLib;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using ShoppingList.Data;
using ShoppingList.Media;
using ShoppingList.Popups;
using ShoppingList.Controls;
using ShoppingList.Resources;
using ShoppingList.Popups.Primitives;
//-------------------------------------------------------------------------------------------------------------------------------
#endregion
//-------------------------------------------------------------------------------------------------------------------------------

//*******************************************************************************************************************************
// Début du bloc "ShoppingList.Frames"
//*******************************************************************************************************************************
namespace ShoppingList.Frames
	{

	//  #   #   ###   #   #  #####
	//  #   #  #   #  ## ##  #    
	//  #####  #   #  # # #  ###  
	//  #   #  #   #  #   #  #    
	//  #   #   ###   #   #  #####

	//***************************************************************************************************************************
	#region // Frame Home
	//---------------------------------------------------------------------------------------------------------------------------
	/// <summary>
	/// Définit la fenêtre principale.
	/// </summary>
	//---------------------------------------------------------------------------------------------------------------------------
	public partial class Frm_Home : PhoneApplicationPage, IPhoneApplicationPage
		{
		//-----------------------------------------------------------------------------------------------------------------------
		// Section des Attributs
		//-----------------------------------------------------------------------------------------------------------------------
		private AboutPopup               AboutPopup                  = new AboutPopup      ();
		private AddArticlePopup          AddArticlePopup             = new AddArticlePopup ();
		//-----------------------------------------------------------------------------------------------------------------------
		private ApplicationBarIconButton AddShoppingArticleButton    = null;
		private ApplicationBarIconButton ValidShoppingArticlesButton = null;
		private ApplicationBarIconButton AddFavoryArticleButton      = null;
		//-----------------------------------------------------------------------------------------------------------------------
		
		//***********************************************************************************************************************
		#region // Section des Constructeurs
		//-----------------------------------------------------------------------------------------------------------------------

		//***********************************************************************************************************************
		/// <summary>
		/// Initialise une nouvelle instance de l'objet <b>Frm_Home</b>.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public Frm_Home ()
			{
			//-------------------------------------------------------------------------------------------------------------------
			this.InitializeComponent ();
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			var AboutMenu = new ApplicationBarMenuItem ();

			AboutMenu.Text   = AppResources.HoemForm_AppBarMenu_About;
			AboutMenu.Click += this.OnAboutClick;

			this.ApplicationBar.MenuItems.Add ( AboutMenu );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.AddShoppingArticleButton    = new ApplicationBarIconButton ();
			this.ValidShoppingArticlesButton = new ApplicationBarIconButton ();
			this.AddFavoryArticleButton      = new ApplicationBarIconButton ();

			this.AddShoppingArticleButton   .IconUri = new Uri ( "/Images/Application/add.png"  , UriKind.Relative );
			this.ValidShoppingArticlesButton.IconUri = new Uri ( "/Images/Application/caddy.png", UriKind.Relative );
			this.AddFavoryArticleButton     .IconUri = new Uri ( "/Images/Application/add.png"  , UriKind.Relative );

			this.AddShoppingArticleButton   .Text = AppResources.HomeForm_AppBar_AddShopping;
			this.ValidShoppingArticlesButton.Text = AppResources.HomeForm_AppBar_ValidShopping;
			this.AddFavoryArticleButton     .Text = AppResources.HomeForm_AppBar_AddFavory;

			this.AddShoppingArticleButton   .Click += new EventHandler ( this.OnAddShoppingItemClick    );
			this.ValidShoppingArticlesButton.Click += new EventHandler ( this.OnValidShoppingItemsClick );
			this.AddFavoryArticleButton     .Click += new EventHandler ( this.OnAddFavoryItemClick      );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			if ( IsolatedStorageSettings.ApplicationSettings.Contains ( "pivot-selected-index" ) )
				{
				//---------------------------------------------------------------------------------------------------------------
				object PivotSelectedIndex = IsolatedStorageSettings.ApplicationSettings
				                                                          ["pivot-selected-index"];
				if ( PivotSelectedIndex is Int32 )
					this.Home.SelectedIndex = (int)PivotSelectedIndex;
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.Shopping_LoadArticles    ();
			this.Favorites_LoadArticles   ();
			this.CheckAppBarButtonsStatus ();
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // Section des Procédures Privées
		//-----------------------------------------------------------------------------------------------------------------------
		
		//***********************************************************************************************************************
		/// <summary>
		/// Reflète l'état de la page en cours sur les Icons en bas.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		private void UpdadeApplicationBarIconButton ()
			{
			//-------------------------------------------------------------------------------------------------------------------
			this.ApplicationBar.Buttons.Clear ();
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			if ( this.Home.SelectedIndex == 0 )
				{
				//---------------------------------------------------------------------------------------------------------------
				this.ApplicationBar.Buttons.Add ( this.AddShoppingArticleButton    );
				this.ApplicationBar.Buttons.Add ( this.ValidShoppingArticlesButton );
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			else
				{
				//---------------------------------------------------------------------------------------------------------------
				this.ApplicationBar.Buttons.Add ( this.AddFavoryArticleButton      );
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
	
		//***********************************************************************************************************************
		/// <summary>
		/// Gère les boutons de la bare d'application.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		private void CheckAppBarButtonsStatus ()
			{
			//-------------------------------------------------------------------------------------------------------------------
			int  ArticlesCount         = 0;
			bool ValidShoppingArticles = false;
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			// Est ce que l'article est déjà dans la liste ?
			//-------------------------------------------------------------------------------------------------------------------
			foreach ( UIElement Item in this.ListBoxItem_Shopping.Children )
				{
				//---------------------------------------------------------------------------------------------------------------
				ArticleItem AItem = Item as ArticleItem;

				if ( AItem != null )
					{
					if ( AItem.Shopping.IsChecked ) ValidShoppingArticles = true;
					else                            ArticlesCount             ++;
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.ValidShoppingArticlesButton.IsEnabled = ValidShoppingArticles;

			try { Instance.UpdateTile ( ArticlesCount ); } catch {}
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // Section des Evenements de la Fenêtre
		//-----------------------------------------------------------------------------------------------------------------------
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'une pression sur le bouton Précédent.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>CancelEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		protected override void OnBackKeyPress ( System.ComponentModel.CancelEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			if ( this.BeginBackKeyPress != null )
				{
				Delegate[] Delegates = this.BeginBackKeyPress.GetInvocationList ();

				foreach ( Delegate CallBack in Enumerable.Reverse<Delegate> ( Delegates ) )
					((EventHandler<CancelEventArgs>)CallBack) ( this, Args );
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			base.OnBackKeyPress ( Args );
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Déclenche l'événement <b>Loaded</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnLoaded ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			// Purge de l'historique
			//-------------------------------------------------------------------------------------------------------------------
			try { while ( Instance.RootFrame.RemoveBackEntry () != null ); } catch {}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#region // Gestion de l'Evaluation
			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				int      ReviewCount = 1;
				DateTime ReviewDate  = DateTime.MinValue;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// ReviewCount
				//---------------------------------------------------------------------------------------------------------------
				if ( IsolatedStorageSettings.ApplicationSettings.Contains ( "review-count" ) )
					{
					//-----------------------------------------------------------------------------------------------------------
					object Value = IsolatedStorageSettings.ApplicationSettings["review-count"];

					if ( Value is Int32 ) ReviewCount = (int)Value;
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// ReviewDate
				//---------------------------------------------------------------------------------------------------------------
				if ( IsolatedStorageSettings.ApplicationSettings.Contains ( "review-date" ) )
					{
					//-----------------------------------------------------------------------------------------------------------
					object Value = IsolatedStorageSettings.ApplicationSettings["review-date"];

					if ( Value is DateTime ) ReviewDate = (DateTime)Value;
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
			
				//---------------------------------------------------------------------------------------------------------------
				bool SaveReview  = false;
				bool AlertReview = false;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// Première demande
				//---------------------------------------------------------------------------------------------------------------
				if ( ReviewCount == 5 )
					{
					//-----------------------------------------------------------------------------------------------------------
					AlertReview = true;

					ReviewCount ++;
					SaveReview  = true;
					ReviewDate  = DateTime.Now.Date;
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				// 2ème et 3ème demande
				//---------------------------------------------------------------------------------------------------------------
				else if ( ReviewDate != DateTime.MinValue && 
				                             DateTime.Now.Subtract ( ReviewDate ).TotalDays >= 30 )
					{
					//-----------------------------------------------------------------------------------------------------------
					if ( ReviewCount > 5 && ReviewCount < 8 )
						{
						AlertReview = true;

						ReviewCount ++;
						SaveReview  = true;
						ReviewDate  = DateTime.Now.Date;
						}
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				// On est dans la phase de démarrage
				//---------------------------------------------------------------------------------------------------------------
				else if ( ReviewCount > 0 && ReviewCount < 5 )
					{
					//-----------------------------------------------------------------------------------------------------------
					ReviewCount ++;
					SaveReview  = true;
					ReviewDate  = DateTime.Now.Date;
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
			
				//---------------------------------------------------------------------------------------------------------------
				// Sauvegarde des paramètres !
				//---------------------------------------------------------------------------------------------------------------
				if ( SaveReview )
					{
					//-----------------------------------------------------------------------------------------------------------
					IsolatedStorageSettings.ApplicationSettings["review-count"] = ReviewCount;
					IsolatedStorageSettings.ApplicationSettings["review-date" ] = ReviewDate;

					IsolatedStorageSettings.ApplicationSettings.Save ();
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// Demande d'évaluation
				//---------------------------------------------------------------------------------------------------------------
				if ( AlertReview )
					{
					//-----------------------------------------------------------------------------------------------------------
					this.Dispatcher.BeginInvoke ( () =>
						{
						//-------------------------------------------------------------------------------------------------------
						string Caption = AppResources.HomeForm_Review_Title;
						string Message = AppResources.HomeForm_Review_FirstLine +
										 "\n"                                   +
										 AppResources.HomeForm_Review_SecondLine;
						//-------------------------------------------------------------------------------------------------------

						//-------------------------------------------------------------------------------------------------------
						if ( ConfirmBox.Show ( Message, Caption ) )
							{
							IsolatedStorageSettings.ApplicationSettings["review-count"] = -1;

							IsolatedStorageSettings.ApplicationSettings.Save ();
	
							(new MarketplaceReviewTask ()).Show ();
							}
						//-------------------------------------------------------------------------------------------------------
						} );
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		#region // Section des Procédures de Gestion de la section `Shopping`
		//-----------------------------------------------------------------------------------------------------------------------
		
		//***********************************************************************************************************************
		/// <summary>
		/// Charge les articles en cours.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Shopping_LoadArticles ()
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			foreach ( Shopping shopping in from S in Instance.ArticleSource.Shopping orderby S.InsertDate select S )
				{
				//---------------------------------------------------------------------------------------------------------------
				Article article = Instance.ArticleSource.Article.SingleOrDefault ( A => A.ArticleID == shopping.ArticleID );

				this.Shopping_AddEntry ( article, shopping );
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.Label_Shopping.Visibility = ( this.ListBoxItem_Shopping.Children.Count == 0 ).ToVisibility ();
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Ajoute un article à la liste <b>mes courses</b>.
		/// </summary>
		/// <param name="Article">Article à ajouter.</param>
		/// <param name="Shopping">Article à acheter.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Shopping_AddEntry ( Article Article, Shopping Shopping )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ArticleItem Item = new ArticleItem ()
				{
				Article     = Article                     ,
				Shopping    = Shopping                    ,
				Margin      = new Thickness ( 0, 0, 0, 4 ),
				Tag         = Article                     ,
				IsChecked   = Shopping.IsChecked          ,
				};
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			Item.Click      += this.Shopping_OnItemClick;
			Item.Title       = Article.Description;
			Item.Description = string.Format ( AppResources.HomeForm_Item_Quantity, Shopping.Quantity );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ContextMenu ShoppingArticleMenu = new ContextMenu() { IsZoomEnabled=false, Tag=Item };

			ShoppingArticleMenu.Opened += ( object Sender, RoutedEventArgs Args ) =>
				{
				//---------------------------------------------------------------------------------------------------------------
				ContextMenu    ContextMenu = Sender as ContextMenu;
				ItemCollection Items       = ContextMenu.Items;
				ArticleItem    ArticleItem = (ContextMenu.Tag as ArticleItem);
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// supprimer la photo
				//---------------------------------------------------------------------------------------------------------------
				MenuItem removePhotoMenu = (Items[2] as MenuItem);

				removePhotoMenu.Visibility = ( ArticleItem.HavePhoto ).ToVisibility ();
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// ajouter aux favoris
				//---------------------------------------------------------------------------------------------------------------
				MenuItem itemToFavoriteMenu = (Items[3] as MenuItem);

				itemToFavoriteMenu.Visibility = ( ! ArticleItem.Article.IsFavory ).ToVisibility ();
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// ajouter aux favoris
				//---------------------------------------------------------------------------------------------------------------
				MenuItem removeFromFavoritesMenu = (Items[4] as MenuItem);

				removeFromFavoritesMenu.Visibility = (ArticleItem.Article.IsFavory).ToVisibility();
				//---------------------------------------------------------------------------------------------------------------
				};
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			// charger une image de la librairie
			//-------------------------------------------------------------------------------------------------------------------
			MenuItem GalleryPhotoMenu = new MenuItem () 
				{ Header = AppResources.HomeForm_ItemMenu_FromGallery, Tag = Item };

			GalleryPhotoMenu.Click += new RoutedEventHandler ( this.Photo_OnGalleryClick );

			ShoppingArticleMenu.Items.Add ( GalleryPhotoMenu );
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			// prendre une photo
			//-------------------------------------------------------------------------------------------------------------------
			MenuItem TakePhotoMenu = new MenuItem () 
				{ Header = AppResources.HomeForm_ItemMenu_Photo, Tag = Item };

			TakePhotoMenu.Click += new RoutedEventHandler ( this.Photo_OnTakeClick );

			ShoppingArticleMenu.Items.Add ( TakePhotoMenu );
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			// supprimer la photo
			//-------------------------------------------------------------------------------------------------------------------
			MenuItem RemovePhotoMenu = new MenuItem () 
				{ Header = AppResources.HomeForm_ItemMenu_RemovePhoto, Tag = Item };

			RemovePhotoMenu.Click += new RoutedEventHandler ( this.Photo_OnRemoveClick );

			ShoppingArticleMenu.Items.Add ( RemovePhotoMenu );
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			// ajouter aux favoris
			//-------------------------------------------------------------------------------------------------------------------
			MenuItem ItemToFavoriteMenu = new MenuItem ()
				{ Header = AppResources.HomeForm_ItemMenu_ToFavorite, Tag = Item };

			ItemToFavoriteMenu.Click += new RoutedEventHandler ( Shopping_OnItemToFavoriteClick );

			ShoppingArticleMenu.Items.Add ( ItemToFavoriteMenu );
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			// retirer des favoris
			//-------------------------------------------------------------------------------------------------------------------
			MenuItem RemoveFromFavoritesMenu = new MenuItem ()
				{ Header = AppResources.HomeForm_ItemMenu_RemoveFavorite, Tag = Item };

			RemoveFromFavoritesMenu.Click += new RoutedEventHandler ( this.Shopping_OnRemoveFromFavoritesClick );

			ShoppingArticleMenu.Items.Add ( RemoveFromFavoritesMenu );
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			// retirer des articles à acheter
			//-------------------------------------------------------------------------------------------------------------------
			MenuItem RemoveShoppingArticleMenu = new MenuItem () 
				{ Header = AppResources.HomeForm_ItemMenu_Remove, Tag = Item };

			RemoveShoppingArticleMenu.Click += new RoutedEventHandler ( this.Shopping_OnRemoveItemClick );

			ShoppingArticleMenu.Items.Add ( RemoveShoppingArticleMenu );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ContextMenuService.SetContextMenu ( Item, ShoppingArticleMenu );

			this.ListBoxItem_Shopping.Children.Insert ( 0, Item );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.Label_Shopping.Visibility = Visibility.Collapsed;
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Recharge un élément de la liste <b>mes courses</b>.
		/// </summary>
		/// <param name="Item">Elément à recharger.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Shopping_ReloadEntry ( ArticleItem Item )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			Item.Description = string.Format ( AppResources.HomeForm_Item_Quantity, Item.Shopping.Quantity );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un clic sur un article à acheter.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Shopping_OnItemClick ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			if ( this.Home.SelectedIndex != 0 ) return;
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ArticleItem Item = Sender as ArticleItem;

			if ( Item != null )
				{
				//---------------------------------------------------------------------------------------------------------------
				Item.Shopping.IsChecked = ! Item.IsChecked;

				Item.IsChecked = ! Item.IsChecked;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				this.Dispatcher.BeginInvoke ( new Action ( () => 
					{
					Instance.ArticleSource.SubmitChanges ();

					this.CheckAppBarButtonsStatus ();
					} ) );
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un clic sur le menu <b>ajouter aux favoris</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Shopping_OnItemToFavoriteClick ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ArticleItem Item = ((MenuItem)Sender).Tag as ArticleItem;

			if ( Item != null )
				{
				//---------------------------------------------------------------------------------------------------------------
				this.Home.SelectedIndex = 1;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				this.Dispatcher.Async ( () =>
					{
					//-----------------------------------------------------------------------------------------------------------
					Item.Article.IsFavory = true;

					Instance.ArticleSource.SubmitChanges ();

					this.Favorites_AddEntry ( Item.Article );
					//-----------------------------------------------------------------------------------------------------------
					}, 500 );
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un clic sur le menu <b>retirer des favoris</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Shopping_OnRemoveFromFavoritesClick ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ArticleItem Item = ((MenuItem)Sender).Tag as ArticleItem;

			if ( Item != null )
				{
				//---------------------------------------------------------------------------------------------------------------
				this.Home.SelectedIndex = 1;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				this.Dispatcher.Async ( () =>
					{
					//-----------------------------------------------------------------------------------------------------------
					Item.Article.IsFavory = false;

					Instance.ArticleSource.SubmitChanges ();
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					ArticleItem ToRevomeItem = null;

					foreach ( UIElement UItem in this.ListBoxItem_Favories.Children )
						{
						ArticleItem AItem = UItem as ArticleItem;

						if ( AItem != null && AItem.Article.ArticleID == Item.Article.ArticleID )
							{ ToRevomeItem = AItem; break; }
						}

					if ( ToRevomeItem != null )
						{
						this.ListBoxItem_Favories.Children.Remove ( ToRevomeItem );

						this.Label_Favories.Visibility = 
						         ( this.ListBoxItem_Favories.Children.Count == 0 ).ToVisibility ();
						}
					//-----------------------------------------------------------------------------------------------------------
					}, 500 );
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un clic sur le menu <b>retirer des articles à acheter</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Shopping_OnRemoveItemClick ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ArticleItem Item = ((MenuItem)Sender).Tag as ArticleItem;

			if ( Item != null )
				{
				//---------------------------------------------------------------------------------------------------------------
				string Title   = AppResources.HomeForm_RemoveItem_Title;
				string Caption = Item.Article.Description;
				
				if ( ! ConfirmBox.Show ( Caption, Title ) ) return;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				Instance.ArticleSource.Shopping.DeleteOnSubmit ( Item.Shopping );

				Instance.ArticleSource.SubmitChanges ();

				this.ListBoxItem_Shopping.Children.Remove ( Item );
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				this.Label_Shopping.Visibility = ( this.ListBoxItem_Shopping.Children.Count == 0 ).ToVisibility ();
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				this.CheckAppBarButtonsStatus ();
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		#region // Section des Procédures de Gestion de la section `Favoris`
		//-----------------------------------------------------------------------------------------------------------------------
		
		//***********************************************************************************************************************
		/// <summary>
		/// Charge les articles favories.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Favorites_LoadArticles ()
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			foreach ( Article article in from A in Instance.ArticleSource.Article 
				                          where A.IsFavory == true orderby A.Description select A )
				{
				//---------------------------------------------------------------------------------------------------------------
				this.Favorites_AddEntry ( article );
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			this.Label_Favories.Visibility = ( this.ListBoxItem_Favories.Children.Count == 0 ).ToVisibility ();
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Ajoute un article à la liste <b>favories</b>.
		/// </summary>
		/// <param name="Article">Article à ajouter.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Favorites_AddEntry ( Article Article )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ArticleItem Item = new ArticleItem ()
				{
				Article     = Article                     ,
				Shopping    = null                        ,
				Margin      = new Thickness ( 0, 0, 0, 4 ),
				Tag         = Article                     ,
				IsChecked   = false                       ,
				};
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			Item.Click      += this.Favorite_OnItemClick;
			Item.Title       = Article.Description;
			Item.Description = string.Format ( AppResources.HomeForm_Item_QuantityTotal, Article.Purchases );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ContextMenu FavoryArticleMenu = new ContextMenu() { IsZoomEnabled=false, Tag=Item };

			FavoryArticleMenu.Opened += ( object Sender, RoutedEventArgs Args ) =>
				{
				//---------------------------------------------------------------------------------------------------------------
				ContextMenu    ContextMenu = Sender as ContextMenu;
				ItemCollection Items       = ContextMenu.Items;
				ArticleItem    ArticleItem = (ContextMenu.Tag as ArticleItem);
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// Photo
				//---------------------------------------------------------------------------------------------------------------
				MenuItem removePhotoMenu = (Items[2] as MenuItem);

				removePhotoMenu.Visibility = ( ArticleItem.HavePhoto ).ToVisibility ();
				//---------------------------------------------------------------------------------------------------------------
				};
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			// charger une photo (galerie)
			//-------------------------------------------------------------------------------------------------------------------
			MenuItem GalleryPhotoMenu = new MenuItem () 
				{ Header = AppResources.HomeForm_ItemMenu_FromGallery, Tag = Item };

			GalleryPhotoMenu.Click += new RoutedEventHandler ( this.Photo_OnGalleryClick );

			FavoryArticleMenu.Items.Add ( GalleryPhotoMenu );
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			// prendre une photo
			//-------------------------------------------------------------------------------------------------------------------
			MenuItem TakePhotoMenu = new MenuItem () 
				{ Header = AppResources.HomeForm_ItemMenu_Photo, Tag = Item };

			TakePhotoMenu.Click += new RoutedEventHandler ( this.Photo_OnTakeClick );

			FavoryArticleMenu.Items.Add ( TakePhotoMenu );
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			// supprimer la photo
			//-------------------------------------------------------------------------------------------------------------------
			MenuItem RemovePhotoMenu = new MenuItem () 
				{ Header = AppResources.HomeForm_ItemMenu_RemovePhoto, Tag = Item };

			RemovePhotoMenu.Click += new RoutedEventHandler ( this.Photo_OnRemoveClick );

			FavoryArticleMenu.Items.Add ( RemovePhotoMenu );
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			// retirer des favoris
			//-------------------------------------------------------------------------------------------------------------------
			MenuItem RemoveItemMenu = new MenuItem () 
				{ Header = AppResources.HomeForm_ItemMenu_RemoveFavorite, Tag = Item };

			RemoveItemMenu.Click += new RoutedEventHandler ( this.Favorite_OnRemoveItemClick );

			FavoryArticleMenu.Items.Add ( RemoveItemMenu );
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			ContextMenuService.SetContextMenu ( Item, FavoryArticleMenu );

			this.ListBoxItem_Favories.Children.Add ( Item );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.Label_Favories.Visibility = Visibility.Collapsed;
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Recharge un élément de la liste <b>favoris</b>.
		/// </summary>
		/// <param name="Item">Elément à recharger.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Favorites_ReloadEntry ( ArticleItem Item )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			Item.Description = string.Format ( AppResources.HomeForm_Item_QuantityTotal, Item.Article.Purchases );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un clic sur un article favorie.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel</param>
		/// <param name="Args"><b>EventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Favorite_OnItemClick ( object Sender, EventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			if ( this.Home.SelectedIndex != 1 ) return;
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.AddArticlePopup.OpenToAddShoppingArticle (  ( object A, ArticleEntry B ) =>
				{
				//---------------------------------------------------------------------------------------------------------------
				// Variables
				//---------------------------------------------------------------------------------------------------------------
				ArticleItem ArticleItem = null;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// Est ce que l'article est déjà dans la liste ?
				//---------------------------------------------------------------------------------------------------------------
				foreach ( UIElement Item in this.ListBoxItem_Shopping.Children )
					{
					//-----------------------------------------------------------------------------------------------------------
					ArticleItem AItem = Item as ArticleItem;

					if ( AItem != null && AItem.Article.ArticleID == B.Article.ArticleID )
						{ ArticleItem = AItem; break; }
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// Si valeur négative et pas trouvé, on fait rien
				//---------------------------------------------------------------------------------------------------------------
				if ( B.Quantity <= 0 && ArticleItem == null ) return;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				this.Home.SelectedIndex = 0;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				this.Dispatcher.Async ( () =>
					{
					//-----------------------------------------------------------------------------------------------------------
					// Si l'article est déjà dans la liste, on modifie
					//-----------------------------------------------------------------------------------------------------------
					if ( ArticleItem != null )
						{
						//-------------------------------------------------------------------------------------------------------
						// Mise à jour et enregistrement des données
						//-------------------------------------------------------------------------------------------------------
						ArticleItem.Shopping.Quantity += B.Quantity;

						Instance.ArticleSource.SubmitChanges ();
						//-------------------------------------------------------------------------------------------------------

						//-------------------------------------------------------------------------------------------------------
						this.Shopping_ReloadEntry ( ArticleItem );
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					// Sinon, on crée
					//-----------------------------------------------------------------------------------------------------------
					else
						{
						//-------------------------------------------------------------------------------------------------------
						// Mise à jour et enregistrement des données
						//-------------------------------------------------------------------------------------------------------
						Shopping Shopping = new Shopping ()
							{
							ArticleID  = B.Article.ArticleID,
							Quantity   = B.Quantity         ,
							InsertDate = DateTime.Now       ,
							};

						Instance.ArticleSource.Shopping.InsertOnSubmit ( Shopping );
						Instance.ArticleSource.SubmitChanges           (          );
						//-------------------------------------------------------------------------------------------------------

						//-------------------------------------------------------------------------------------------------------
						this.Shopping_AddEntry ( B.Article, Shopping );

						this.CheckAppBarButtonsStatus ();
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------
					}, 500 );
				//---------------------------------------------------------------------------------------------------------------
				}, (Sender as ArticleItem).Article );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un clic sur le menu <b>retirer des favoris</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Favorite_OnRemoveItemClick ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ArticleItem Item = ((MenuItem)Sender).Tag as ArticleItem;

			if ( Item != null )
				{
				//---------------------------------------------------------------------------------------------------------------
				Item.Article.IsFavory = false;

				Instance.ArticleSource.SubmitChanges ();

				this.ListBoxItem_Favories.Children.Remove ( Item );
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				this.Label_Favories.Visibility = ( this.ListBoxItem_Favories.Children.Count == 0 ).ToVisibility ();
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // Section des Procédures de Gestion de la section `Photos`
		//-----------------------------------------------------------------------------------------------------------------------
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un clic sur le menu <b>charger une photo (galerie)</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Photo_OnGalleryClick ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ArticleItem Item = ((MenuItem)Sender).Tag as ArticleItem;

			if ( Item != null )
				{
				//---------------------------------------------------------------------------------------------------------------
				var Task = new PhotoChooserTask () { ShowCamera = false };
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				Task.Completed += new EventHandler<PhotoResult> ( ( object A, PhotoResult B ) =>
					{
					//-----------------------------------------------------------------------------------------------------------
					if ( B.TaskResult==TaskResult.Cancel && B.Error is InvalidOperationException )
						{
						//-------------------------------------------------------------------------------------------------------
						MessageBox.Show ( AppResources.HomeForm_Gallery_Message );
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------
					else if ( B.TaskResult == TaskResult.OK )
						{
						//-------------------------------------------------------------------------------------------------------
						this.Dispatcher.BeginInvoke ( new Action ( () =>
							{
							//---------------------------------------------------------------------------------------------------
							JpegInfo JpegInfo = ExifReader.ReadJpeg ( B.ChosenPhoto, B.OriginalFileName );

							TakesWorker.ReloadTake ( Item.Article.ArticleID, B.ChosenPhoto, JpegInfo );
							//---------------------------------------------------------------------------------------------------
							} ) );
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------
					} );
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				Task.Show ();
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un clic sur le menu <b>prendre une photo</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Photo_OnTakeClick ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ArticleItem Item = ((MenuItem)Sender).Tag as ArticleItem;

			if ( Item != null )
				{
				//---------------------------------------------------------------------------------------------------------------
				var Task = new CameraCaptureTask ();
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				Task.Completed += new EventHandler<PhotoResult> ( ( object A, PhotoResult B ) =>
					{
					//-----------------------------------------------------------------------------------------------------------
					if ( B.TaskResult==TaskResult.Cancel && B.Error is InvalidOperationException )
						{
						//-------------------------------------------------------------------------------------------------------
						MessageBox.Show ( AppResources.HomeForm_Photo_Message );
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------
					else if ( B.TaskResult == TaskResult.OK )
						{
						//-------------------------------------------------------------------------------------------------------
						this.Dispatcher.BeginInvoke ( new Action ( () =>
							{
							//---------------------------------------------------------------------------------------------------
							JpegInfo JpegInfo = ExifReader.ReadJpeg ( B.ChosenPhoto, B.OriginalFileName );

							TakesWorker.ReloadTake ( Item.Article.ArticleID, B.ChosenPhoto, JpegInfo );
							//---------------------------------------------------------------------------------------------------
							} ) );
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------
					} );
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				Task.Show ();
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un clic sur le menu <b>supprimer la photo</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Photo_OnRemoveClick ( object Sender, RoutedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			ArticleItem Item = ((MenuItem)Sender).Tag as ArticleItem;

			if ( Item != null ) TakesWorker.DeleteTake ( Item.Article.ArticleID );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		#region // Section des Procédures liées aux Contrôles
		//-----------------------------------------------------------------------------------------------------------------------
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit quand on bascule d'une page à l'autre.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel</param>
		/// <param name="Args"><b>EventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnPivotIndexChanged ( object Sender, SelectionChangedEventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			this.UpdadeApplicationBarIconButton ();
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				IsolatedStorageSettings.ApplicationSettings["pivot-selected-index"] = this.Home.SelectedIndex;

				IsolatedStorageSettings.ApplicationSettings.Save ();
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un click sur le bouton "ajouter".
		/// </summary>
		/// <param name="Sender">Objet source de l'appel</param>
		/// <param name="Args"><b>EventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnAddShoppingItemClick ( object Sender, EventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.AddArticlePopup.OpenToAddShoppingArticle (  ( object A, ArticleEntry B ) =>
				{
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

				//---------------------------------------------------------------------------------------------------------------
				// Variables
				//---------------------------------------------------------------------------------------------------------------
				ArticleItem ArticleItem = null;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// Est ce que l'article est déjà dans la liste ?
				//---------------------------------------------------------------------------------------------------------------
				foreach ( UIElement Item in this.ListBoxItem_Shopping.Children )
					{
					//-----------------------------------------------------------------------------------------------------------
					ArticleItem AItem = Item as ArticleItem;

					if ( AItem != null && AItem.Article.ArticleID == B.Article.ArticleID )
						{ ArticleItem = AItem; break; }
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// Si valeur négative et pas trouvé, on fait rien
				//---------------------------------------------------------------------------------------------------------------
				if ( B.Quantity <= 0 && ArticleItem == null ) return;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// Si l'article est déjà dans la liste, on modifie
				//---------------------------------------------------------------------------------------------------------------
				if ( ArticleItem != null )
					{
					//-----------------------------------------------------------------------------------------------------------
					// Mise à jour et enregistrement des données
					//-----------------------------------------------------------------------------------------------------------
					ArticleItem.Shopping.Quantity += B.Quantity;

					Instance.ArticleSource.SubmitChanges ();
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					this.Shopping_ReloadEntry ( ArticleItem );
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				// Sinon, on crée
				//---------------------------------------------------------------------------------------------------------------
				else
					{
					//-----------------------------------------------------------------------------------------------------------
					// Mise à jour et enregistrement des données
					//-----------------------------------------------------------------------------------------------------------
					Shopping Shopping = new Shopping ()
						{
						ArticleID  = B.Article.ArticleID,
						Quantity   = B.Quantity         ,
						InsertDate = DateTime.Now       ,
						};

					Instance.ArticleSource.Shopping.InsertOnSubmit ( Shopping );
					Instance.ArticleSource.SubmitChanges           (          );
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					this.Shopping_AddEntry ( B.Article, Shopping );

					this.CheckAppBarButtonsStatus ();
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------

				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				} );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un click sur le bouton "ajouter".
		/// </summary>
		/// <param name="Sender">Objet source de l'appel</param>
		/// <param name="Args"><b>EventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnValidShoppingItemsClick ( object Sender, EventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			string Title   = AppResources.HomeForm_Validation_Title;
			string Caption = AppResources.HomeForm_Validation_Message;

			if ( ! ConfirmBox.Show ( Caption, Title ) ) return;
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			List<ArticleItem> ToRevomeItems = new List<ArticleItem> ();
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			foreach ( UIElement UItem in this.ListBoxItem_Shopping.Children )
				{
				//---------------------------------------------------------------------------------------------------------------
				ArticleItem Item = UItem as ArticleItem;

				if ( Item != null && Item.Shopping.IsChecked )
					{
					//-----------------------------------------------------------------------------------------------------------
					// Enregistrement de l'article achetés
					//-----------------------------------------------------------------------------------------------------------
					int      ArticleID  = Item.Article.ArticleID;
					DateTime InsertDate = DateTime.Now.Date;

					Purchase Purchase = Instance.ArticleSource.Purchase.SingleOrDefault 
			                       ( P => P.ArticleID == ArticleID && P.InsertDate == InsertDate );

					if ( Purchase == null )
						{
						Purchase = new Purchase ()
							{
							ArticleID  = ArticleID             ,
							Quantity   = Item.Shopping.Quantity,
							InsertDate = InsertDate            ,
							};

						Instance.ArticleSource.Purchase.InsertOnSubmit ( Purchase );
						}
					else { Purchase.Quantity += Item.Shopping.Quantity; }
					//-----------------------------------------------------------------------------------------------------------
					
					//-----------------------------------------------------------------------------------------------------------
					// Mise à jour de l'article
					//-----------------------------------------------------------------------------------------------------------
					Item.Article.Purchases += Item.Shopping.Quantity;
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					// Suppression de l'article en cours
					//-----------------------------------------------------------------------------------------------------------
					Instance.ArticleSource.Shopping.DeleteOnSubmit ( Item.Shopping );
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					Instance.ArticleSource.SubmitChanges ();

					ToRevomeItems.Add ( Item );
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			// Retrait de l'élément
			//-------------------------------------------------------------------------------------------------------------------
			foreach ( ArticleItem Item in ToRevomeItems )
				{
				//---------------------------------------------------------------------------------------------------------------
				this.ListBoxItem_Shopping.Children.Remove ( Item );
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			// Mise à jours des Favoris
			//-------------------------------------------------------------------------------------------------------------------
			foreach ( UIElement UItem in this.ListBoxItem_Favories.Children )
				{
				//---------------------------------------------------------------------------------------------------------------
				ArticleItem Item = UItem as ArticleItem;

				if ( Item != null ) this.Favorites_ReloadEntry ( Item );
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			Instance.ArticleSource.SubmitChanges ();

			this.ValidShoppingArticlesButton.IsEnabled = false;
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.Label_Shopping.Visibility = ( this.ListBoxItem_Shopping.Children.Count == 0 ).ToVisibility ();
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un click sur le bouton "ajouter".
		/// </summary>
		/// <param name="Sender">Objet source de l'appel</param>
		/// <param name="Args"><b>EventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnAddFavoryItemClick ( object Sender, EventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.AddArticlePopup.OpenToAddFavoryArticle (  ( object A, ArticleEntry B ) =>
				{
				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

				//---------------------------------------------------------------------------------------------------------------
				this.Home.SelectedIndex = 1;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				this.Dispatcher.Async ( () =>
					{
					//-----------------------------------------------------------------------------------------------------------
					Instance.ArticleSource.SubmitChanges ();

					this.Favorites_AddEntry ( B.Article );
					//-----------------------------------------------------------------------------------------------------------
					}, 500 );
				//---------------------------------------------------------------------------------------------------------------

				//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				} );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un click sur le bouton "a propos de".
		/// </summary>
		/// <param name="Sender">Objet source de l'appel</param>
		/// <param name="Args"><b>EventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnAboutClick ( object Sender, EventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			this.AboutPopup.Open ();
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un clic sur le bouton précédent.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public event EventHandler<CancelEventArgs> BeginBackKeyPress;
		//***********************************************************************************************************************
		}
	//---------------------------------------------------------------------------------------------------------------------------
	#endregion
	//***************************************************************************************************************************

	} // Fin du namespace "ShoppingList.Frames"
//*******************************************************************************************************************************

//*******************************************************************************************************************************
// FIN DU FICHIER
//*******************************************************************************************************************************
